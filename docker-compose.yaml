
  services:
      bank:
        image: lowkent2me/bank:latest
        build:
          context: .
          dockerfile: ./Dockerfile
        ports:
            - 5000:5000
        depends_on:
            - db
        restart: on-failure
        container_name: app-bank
        hostname: app-bank
        networks:
          app_net:
            ipv4_address: 172.16.1.5

      nginx-https:
        image: nginx:stable
        build:
          context: .
          dockerfile: ./Dockerfile_web
        ports:
          - 80:80
          - 443:443
        depends_on:
          - bank
        restart: on-failure
        container_name: bank-nginx
        hostname: nginx-bank
        volumes:
            - ~/nginx/logs_https:/var/log/nginx #logs.
            - ./nginx/conf.d/bank_ssl.conf:/etc/nginx/conf.d/bank_ssl.conf:ro #config app
            - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro #ignore default config
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro #config nginx.
            - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro #sites.
            - ./nginx/crt:/etc/nginx/ssl:ro #certificates
        networks:
          app_net:
            ipv4_address: 172.16.1.6
        profiles:
          - https

      nginx-http:
        image: nginx:stable
        build:
          context: .
          dockerfile: ./Dockerfile_web
        ports:
          - 80:80
          - 443:443
        depends_on:
          - bank
        restart: on-failure
        container_name: bank-nginx
        hostname: nginx-bank
        volumes:
          - ~/nginx/logs_http:/var/log/nginx #logs.
          - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro #ignore default config
          - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro #config nginx.
          - ./nginx/conf.d/bank.conf:/etc/nginx/conf.d/bank_ssl.conf:ro #config app on http
        networks:
          app_net:
            ipv4_address: 172.16.1.8
        profiles:
          - http

      db:
        image: postgres:14-bullseye
        ports:
          - 5432:5432
        container_name: db-bank
        hostname: db-bank
        volumes:
          - ./bank.data:/var/lib/postgresql/data
          - ./Ansible/keys/db_password:/var/lib/postgresql/db_password:ro
        environment:
          PGDATA: /var/lib/postgresql/data/pgdata
          POSTGRES_USER: bank_kot
          POSTGRES_DB: kot
          POSTGRES_PASSWORD_FILE: /var/lib/postgresql/db_password
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U postgres"]
          interval: 300s
          timeout: 5s
          retries: 5
        restart: on-failure
        networks:
          app_net:
            ipv4_address: 172.16.1.7

      certbot:
        image: certbot/dns-cloudflare
        depends_on:
          - nginx
        container_name: certbot
        volumes:
            - ./nginx/crt/letsencrypt:/etc/letsencrypt #certificates
            - ./Ansible/keys/:/opt/cloudflare/ #api token file
            - ./Ansible/keys/:/etc/letsencrypt/accounts/acme-v02.api.letsencrypt.org/directory/ #account
            - ./nginx/crt/certbot_logs:/var/log/letsencrypt #certbot logs

        # Dry Run
        # command: certonly --non-interactive --dns-cloudflare --dns-cloudflare-credentials /opt/cloudflare/credentials --agree-tos -d kvs.bank.smodata.net --dry-run

        # Issue certificate
        command: certonly --non-interactive --dns-cloudflare --dns-cloudflare-credentials /opt/cloudflare/credentials --agree-tos -d kvs.bank.smodata.net --keep-until-expiring

        # Renew certificate
        # command: renew --non-interactive --no-self-upgrade --dns-cloudflare --dns-cloudflare-credentials /opt/cloudflare/credentials --agree-tos

        networks:
            app_net:
              ipv4_address: 172.16.1.4
        profiles:
          - https

  networks:
    app_net:
      driver: bridge
      ipam:
        config:
          - subnet: 172.16.1.0/24
